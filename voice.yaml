esphome:
  name: voice-assistant
  friendly_name: Voice-assistant

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: esp-idf
    

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "CF8oMjPK+Z8QgseklYyTRlRuLoJdholO3+kapa440JQ="

ota:
  platform: esphome
  password: "6840e7ede79b5e45fe5bd59acdbf8513"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Voice-Assistant Fallback Hotspot"
    password: "9EKrai4YttxC"

captive_portal:
    
i2s_audio:
    id: i2s
    i2s_lrclk_pin: GPIO6  #WS 
    i2s_bclk_pin: GPIO7 #SCK

microphone:
  - platform: i2s_audio
    id: va_mic
    adc_type: external
    i2s_din_pin: GPIO4 #SD
    channel: left
    pdm: false

speaker:
  - platform: i2s_audio
    id: va_speaker
    dac_type: external
    i2s_dout_pin: GPIO9    
    channel: stereo

media_player:
  - platform: speaker
    name: None
    id: speaker_media_player
    volume_min: 0.1
    volume_max: 1.0
    announcement_pipeline:
      speaker: va_speaker
      format: FLAC
      sample_rate: 48000
      num_channels: 1


voice_assistant:
  microphone: va_mic
  use_wake_word: false
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  speaker: va_speaker
  id: assist
  on_wake_word_detected:
    - light.turn_on: led
  on_listening:
    - light.turn_off: led
  on_stt_vad_start:
    - light.turn_on: led
  on_stt_vad_end:
    - light.turn_off: led
  on_tts_start:
    - light.turn_on: led
  on_tts_end:
    - light.turn_off: led
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
  on_error:
    - light.turn_on: led
    - delay: 1s
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(assist).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(assist).set_use_wake_word(false);
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config


light:
  - platform: status_led
    name: "Status LED"
    id: led
    icon: "mdi:alarm-light"
    pin:
      number: GPIO8
      inverted: true
    restore_mode: ALWAYS_OFF